// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TvSeriesApi.Data.Context;

#nullable disable

namespace TvSeriesApi.Data.Migrations
{
    [DbContext(typeof(TvSeriesApiContext))]
    partial class TvSeriesApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ActorTVSeries", b =>
                {
                    b.Property<int>("CastActorId")
                        .HasColumnType("int");

                    b.Property<int>("TVSeriesId")
                        .HasColumnType("int");

                    b.HasKey("CastActorId", "TVSeriesId");

                    b.HasIndex("TVSeriesId");

                    b.ToTable("ActorTVSeries");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActorId"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActorId");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Episode", b =>
                {
                    b.Property<int>("EpisodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EpisodeId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.HasKey("EpisodeId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Season", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeasonId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TVSeriesId")
                        .HasColumnType("int");

                    b.HasKey("SeasonId");

                    b.HasIndex("TVSeriesId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.TVSeries", b =>
                {
                    b.Property<int>("TVSeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TVSeriesId"), 1L, 1);

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("TVSeriesId");

                    b.HasIndex("GenreId");

                    b.ToTable("TVSeries");
                });

            modelBuilder.Entity("ActorTVSeries", b =>
                {
                    b.HasOne("TvSeriesApi.Data.Entities.Actor", null)
                        .WithMany()
                        .HasForeignKey("CastActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TvSeriesApi.Data.Entities.TVSeries", null)
                        .WithMany()
                        .HasForeignKey("TVSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Episode", b =>
                {
                    b.HasOne("TvSeriesApi.Data.Entities.Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Season", b =>
                {
                    b.HasOne("TvSeriesApi.Data.Entities.TVSeries", "TVSeries")
                        .WithMany("Seasons")
                        .HasForeignKey("TVSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TVSeries");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.TVSeries", b =>
                {
                    b.HasOne("TvSeriesApi.Data.Entities.Genre", "Genre")
                        .WithMany("TVSeries")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Genre", b =>
                {
                    b.Navigation("TVSeries");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Season", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.TVSeries", b =>
                {
                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
