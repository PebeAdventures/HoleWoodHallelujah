// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TvSeriesApi.Data.Context;

#nullable disable

namespace TvSeriesApi.Data.Migrations
{
    [DbContext(typeof(TvSeriesApiContext))]
    [Migration("20220802130116_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ActorTVSeries", b =>
                {
                    b.Property<int>("CastActorId")
                        .HasColumnType("int");

                    b.Property<int>("TVSeriesId")
                        .HasColumnType("int");

                    b.HasKey("CastActorId", "TVSeriesId");

                    b.HasIndex("TVSeriesId");

                    b.ToTable("ActorTVSeries");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActorId"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActorId");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            Age = 25,
                            Fullname = "Anya Taylor"
                        },
                        new
                        {
                            ActorId = 2,
                            Age = 15,
                            Fullname = "Thomas Brodie"
                        },
                        new
                        {
                            ActorId = 3,
                            Age = 20,
                            Fullname = "Moses Ingram"
                        },
                        new
                        {
                            ActorId = 4,
                            Age = 30,
                            Fullname = "Bryan Cranston"
                        },
                        new
                        {
                            ActorId = 5,
                            Age = 32,
                            Fullname = "Aaron Paul"
                        },
                        new
                        {
                            ActorId = 6,
                            Age = 22,
                            Fullname = "Anna Gunn"
                        },
                        new
                        {
                            ActorId = 7,
                            Age = 35,
                            Fullname = "Antony Starr"
                        },
                        new
                        {
                            ActorId = 8,
                            Age = 32,
                            Fullname = "Karl Urban"
                        },
                        new
                        {
                            ActorId = 9,
                            Age = 21,
                            Fullname = "Jack Quaid"
                        },
                        new
                        {
                            ActorId = 10,
                            Age = 14,
                            Fullname = "Millie Bobby Brown"
                        },
                        new
                        {
                            ActorId = 11,
                            Age = 15,
                            Fullname = "Finn Wolfhard"
                        },
                        new
                        {
                            ActorId = 12,
                            Age = 17,
                            Fullname = "Noah Schnapp"
                        },
                        new
                        {
                            ActorId = 14,
                            Age = 30,
                            Fullname = "Ilona Ostrowska"
                        },
                        new
                        {
                            ActorId = 15,
                            Age = 45,
                            Fullname = "Cezary Żak"
                        },
                        new
                        {
                            ActorId = 16,
                            Age = 55,
                            Fullname = "Violetta Arlak"
                        },
                        new
                        {
                            ActorId = 13,
                            Age = 66,
                            Fullname = "Yellow Magnetic Star"
                        },
                        new
                        {
                            ActorId = 18,
                            Age = 40,
                            Fullname = "Chris Parnell"
                        },
                        new
                        {
                            ActorId = 19,
                            Age = 61,
                            Fullname = "Tom Kenny"
                        },
                        new
                        {
                            ActorId = 17,
                            Age = 31,
                            Fullname = "Justin Roiland"
                        });
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Episode", b =>
                {
                    b.Property<int>("EpisodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EpisodeId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.HasKey("EpisodeId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes");

                    b.HasData(
                        new
                        {
                            EpisodeId = 1,
                            Name = "Opening",
                            SeasonId = 1
                        },
                        new
                        {
                            EpisodeId = 2,
                            Name = "Exchanges",
                            SeasonId = 1
                        },
                        new
                        {
                            EpisodeId = 3,
                            Name = "Doubled Pawns",
                            SeasonId = 1
                        },
                        new
                        {
                            EpisodeId = 4,
                            Name = "Middle Game",
                            SeasonId = 1
                        },
                        new
                        {
                            EpisodeId = 5,
                            Name = "Fork",
                            SeasonId = 1
                        },
                        new
                        {
                            EpisodeId = 6,
                            Name = "Adjounment",
                            SeasonId = 1
                        },
                        new
                        {
                            EpisodeId = 7,
                            Name = "End",
                            SeasonId = 1
                        },
                        new
                        {
                            EpisodeId = 8,
                            Name = "breakings1",
                            SeasonId = 2
                        },
                        new
                        {
                            EpisodeId = 9,
                            Name = "breakings2",
                            SeasonId = 3
                        },
                        new
                        {
                            EpisodeId = 10,
                            Name = "branczoAndMateusz",
                            SeasonId = 3
                        });
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Drama"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Trilling"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Action"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            GenreId = 5,
                            Name = "Comedy"
                        },
                        new
                        {
                            GenreId = 6,
                            Name = "Crime Fiction"
                        });
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Season", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeasonId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TVSeriesId")
                        .HasColumnType("int");

                    b.HasKey("SeasonId");

                    b.HasIndex("TVSeriesId");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            SeasonId = 1,
                            Name = "Season 1",
                            TVSeriesId = 1
                        },
                        new
                        {
                            SeasonId = 2,
                            Name = "Season 1",
                            TVSeriesId = 2
                        },
                        new
                        {
                            SeasonId = 3,
                            Name = "Season 2",
                            TVSeriesId = 2
                        },
                        new
                        {
                            SeasonId = 4,
                            Name = "Season 1",
                            TVSeriesId = 3
                        });
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.TVSeries", b =>
                {
                    b.Property<int>("TVSeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TVSeriesId"), 1L, 1);

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("TVSeriesId");

                    b.HasIndex("GenreId");

                    b.ToTable("TVSeries");

                    b.HasData(
                        new
                        {
                            TVSeriesId = 1,
                            GenreId = 1,
                            Name = "GambitSuko",
                            Year = 2020
                        },
                        new
                        {
                            TVSeriesId = 2,
                            GenreId = 2,
                            Name = "Breaking Bad",
                            Year = 2002
                        },
                        new
                        {
                            TVSeriesId = 3,
                            GenreId = 3,
                            Name = "Branczo",
                            Year = 2022
                        });
                });

            modelBuilder.Entity("ActorTVSeries", b =>
                {
                    b.HasOne("TvSeriesApi.Data.Entities.Actor", null)
                        .WithMany()
                        .HasForeignKey("CastActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TvSeriesApi.Data.Entities.TVSeries", null)
                        .WithMany()
                        .HasForeignKey("TVSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Episode", b =>
                {
                    b.HasOne("TvSeriesApi.Data.Entities.Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Season", b =>
                {
                    b.HasOne("TvSeriesApi.Data.Entities.TVSeries", "TVSeries")
                        .WithMany("Seasons")
                        .HasForeignKey("TVSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TVSeries");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.TVSeries", b =>
                {
                    b.HasOne("TvSeriesApi.Data.Entities.Genre", "Genre")
                        .WithMany("TVSeries")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Genre", b =>
                {
                    b.Navigation("TVSeries");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.Season", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("TvSeriesApi.Data.Entities.TVSeries", b =>
                {
                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
